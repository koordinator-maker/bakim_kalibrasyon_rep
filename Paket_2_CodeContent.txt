### DOSYA BAŞLANGIÇ: .\\_otokodlama\admin_smoke_final2.py
import os, sys, django
sys.path.insert(0, os.getcwd())
os.environ.setdefault("DJANGO_SETTINGS_MODULE","core.settings_maintenance")
django.setup()

from django.contrib.auth import get_user_model
from django.test import Client
from maintenance.models import Equipment

# superuser garanti
U = get_user_model()
u, _ = U.objects.get_or_create(username="admin",
    defaults={"email":"admin@example.com","is_staff":True,"is_superuser":True})
u.is_staff = True; u.is_superuser = True; u.set_password("admin123!"); u.save()

c = Client()
print("GET /admin/ ->", c.get("/admin/").status_code)
c.post("/admin/login/?next=/admin/", {
    "username":"admin","password":"admin123!",
    "this_is_the_login_form":1,"next":"/admin/"
}, follow=True)

cl = f"/admin/{Equipment._meta.app_label}/{Equipment._meta.model_name}/"
ad = f"/admin/{Equipment._meta.app_label}/{Equipment._meta.model_name}/add/"
print("CL:", c.get(cl).status_code, cl)
print("AD:", c.get(ad).status_code, ad)
### DOSYA BİTİŞ: admin_smoke_final2.py

### DOSYA BAŞLANGIÇ: .\\_yedek\20251005-193207\maintenance\admin.py
from django.contrib import admin
from .models import Equipment

@admin.register(Equipment)
class EquipmentAdmin(admin.ModelAdmin):
    list_display = ("id", "name", "serial_number")
    search_fields = ("name", "serial_number")
### DOSYA BİTİŞ: admin.py

### DOSYA BAŞLANGIÇ: .\\_yedek\20251005-225814\maintenance\admin.py
from django.contrib import admin
from .models import Equipment

@admin.register(Equipment)
class EquipmentAdmin(admin.ModelAdmin):
    list_display = ("id", "name", "serial_number")
    search_fields = ("name", "serial_number")
### DOSYA BİTİŞ: admin.py

### DOSYA BAŞLANGIÇ: .\\_yedek\20251005-192504\maintenance\admin.py
from django.contrib import admin
from .models import Equipment

@admin.register(Equipment)
class EquipmentAdmin(admin.ModelAdmin):
    list_display = ("id", "name", "serial_number")
    search_fields = ("name", "serial_number")
### DOSYA BİTİŞ: admin.py

### DOSYA BAŞLANGIÇ: .\\_yedek\20251005-192603\maintenance\admin.py
from django.contrib import admin
from .models import Equipment

@admin.register(Equipment)
class EquipmentAdmin(admin.ModelAdmin):
    list_display = ("id", "name", "serial_number")
    search_fields = ("name", "serial_number")
### DOSYA BİTİŞ: admin.py

### DOSYA BAŞLANGIÇ: .\\_otokodlama\admin_smoke_final.py
import os, sys, django
sys.path.insert(0, os.getcwd())
os.environ.setdefault("DJANGO_SETTINGS_MODULE","core.settings_maintenance")
django.setup()

from django.contrib import admin
from django.conf import settings
from django.urls import reverse, NoReverseMatch, clear_url_caches, get_resolver
from importlib import import_module, reload
from django.contrib.admin.templatetags.admin_urls import admin_urlname
from maintenance.models import Equipment
from django.contrib.auth import get_user_model
from django.test import Client

# Admin registry'yi yükle ve URL resolver'ı tazeleyip yeniden derle
admin.autodiscover()
clear_url_caches()
reload(import_module(settings.ROOT_URLCONF))

# Çekirdek admin reverse'leri
print("admin:index ->", reverse("admin:index"))
print("admin:login ->", reverse("admin:login"))
try:
    print("admin:app_list(maintenance) ->", reverse("admin:app_list", kwargs={"app_label":"maintenance"}))
except NoReverseMatch as e:
    print("WARN app_list:", e)

# Model bazlı isimleri deneyelim (namespace + app + model + action)
nm_cl  = f"admin:{Equipment._meta.app_label}_{Equipment._meta.model_name}_changelist"
nm_add = f"admin:{Equipment._meta.app_label}_{Equipment._meta.model_name}_add"

# Debug: resolver'daki ilgili isimleri göster
names = sorted(n for n in get_resolver().reverse_dict.keys()
               if isinstance(n, str) and "admin" in n and Equipment._meta.model_name in n)
print("resolver names (sample):", names[:10])

for nm in (nm_cl, nm_add):
    try:
        print(nm, "->", reverse(nm))
    except NoReverseMatch as e:
        print("WARN", nm, "->", e)

# Superuser garanti
User = get_user_model()
u, _ = User.objects.get_or_create(username="admin",
    defaults={"email":"admin@example.com","is_staff":True,"is_superuser":True})
u.is_staff = True; u.is_superuser = True; u.set_password("admin123!"); u.save()

# Login + gerçek URL yoluyla duman testi
c = Client()
c.post("/admin/login/?next=/admin/", {
    "username":"admin","password":"admin123!",
    "this_is_the_login_form":1,"next":"/admin/"
}, follow=True)

cl_path  = f"/admin/{Equipment._meta.app_label}/{Equipment._meta.model_name}/"
add_path = f"/admin/{Equipment._meta.app_label}/{Equipment._meta.model_name}/add/"

print("CL  status:", c.get(cl_path).status_code, cl_path)
print("ADD status:", c.get(add_path).status_code, add_path)
### DOSYA BİTİŞ: admin_smoke_final.py

### DOSYA BAŞLANGIÇ: .\\_yedek\20251005-193207\_otokodlama\admin_smoke_final.py
import os, sys, django
sys.path.insert(0, os.getcwd())
os.environ.setdefault("DJANGO_SETTINGS_MODULE","core.settings_maintenance")
django.setup()

from django.contrib import admin
from django.conf import settings
from django.urls import reverse, NoReverseMatch, clear_url_caches, get_resolver
from importlib import import_module, reload
from django.contrib.admin.templatetags.admin_urls import admin_urlname
from maintenance.models import Equipment
from django.contrib.auth import get_user_model
from django.test import Client

# Admin registry'yi yükle ve URL resolver'ı tazeleyip yeniden derle
admin.autodiscover()
clear_url_caches()
reload(import_module(settings.ROOT_URLCONF))

# Çekirdek admin reverse'leri
print("admin:index ->", reverse("admin:index"))
print("admin:login ->", reverse("admin:login"))
try:
    print("admin:app_list(maintenance) ->", reverse("admin:app_list", kwargs={"app_label":"maintenance"}))
except NoReverseMatch as e:
    print("WARN app_list:", e)

# Model bazlı isimleri deneyelim (namespace + app + model + action)
nm_cl  = f"admin:{Equipment._meta.app_label}_{Equipment._meta.model_name}_changelist"
nm_add = f"admin:{Equipment._meta.app_label}_{Equipment._meta.model_name}_add"

# Debug: resolver'daki ilgili isimleri göster
names = sorted(n for n in get_resolver().reverse_dict.keys()
               if isinstance(n, str) and "admin" in n and Equipment._meta.model_name in n)
print("resolver names (sample):", names[:10])

for nm in (nm_cl, nm_add):
    try:
        print(nm, "->", reverse(nm))
    except NoReverseMatch as e:
        print("WARN", nm, "->", e)

# Superuser garanti
User = get_user_model()
u, _ = User.objects.get_or_create(username="admin",
    defaults={"email":"admin@example.com","is_staff":True,"is_superuser":True})
u.is_staff = True; u.is_superuser = True; u.set_password("admin123!"); u.save()

# Login + gerçek URL yoluyla duman testi
c = Client()
c.post("/admin/login/?next=/admin/", {
    "username":"admin","password":"admin123!",
    "this_is_the_login_form":1,"next":"/admin/"
}, follow=True)

cl_path  = f"/admin/{Equipment._meta.app_label}/{Equipment._meta.model_name}/"
add_path = f"/admin/{Equipment._meta.app_label}/{Equipment._meta.model_name}/add/"

print("CL  status:", c.get(cl_path).status_code, cl_path)
print("ADD status:", c.get(add_path).status_code, add_path)
### DOSYA BİTİŞ: admin_smoke_final.py

### DOSYA BAŞLANGIÇ: .\\_yedek\20251005-225814\_otokodlama\admin_smoke_final.py
import os, sys, django
sys.path.insert(0, os.getcwd())
os.environ.setdefault("DJANGO_SETTINGS_MODULE","core.settings_maintenance")
django.setup()

from django.contrib import admin
from django.conf import settings
from django.urls import reverse, NoReverseMatch, clear_url_caches, get_resolver
from importlib import import_module, reload
from django.contrib.admin.templatetags.admin_urls import admin_urlname
from maintenance.models import Equipment
from django.contrib.auth import get_user_model
from django.test import Client

# Admin registry'yi yükle ve URL resolver'ı tazeleyip yeniden derle
admin.autodiscover()
clear_url_caches()
reload(import_module(settings.ROOT_URLCONF))

# Çekirdek admin reverse'leri
print("admin:index ->", reverse("admin:index"))
print("admin:login ->", reverse("admin:login"))
try:
    print("admin:app_list(maintenance) ->", reverse("admin:app_list", kwargs={"app_label":"maintenance"}))
except NoReverseMatch as e:
    print("WARN app_list:", e)

# Model bazlı isimleri deneyelim (namespace + app + model + action)
nm_cl  = f"admin:{Equipment._meta.app_label}_{Equipment._meta.model_name}_changelist"
nm_add = f"admin:{Equipment._meta.app_label}_{Equipment._meta.model_name}_add"

# Debug: resolver'daki ilgili isimleri göster
names = sorted(n for n in get_resolver().reverse_dict.keys()
               if isinstance(n, str) and "admin" in n and Equipment._meta.model_name in n)
print("resolver names (sample):", names[:10])

for nm in (nm_cl, nm_add):
    try:
        print(nm, "->", reverse(nm))
    except NoReverseMatch as e:
        print("WARN", nm, "->", e)

# Superuser garanti
User = get_user_model()
u, _ = User.objects.get_or_create(username="admin",
    defaults={"email":"admin@example.com","is_staff":True,"is_superuser":True})
u.is_staff = True; u.is_superuser = True; u.set_password("admin123!"); u.save()

# Login + gerçek URL yoluyla duman testi
c = Client()
c.post("/admin/login/?next=/admin/", {
    "username":"admin","password":"admin123!",
    "this_is_the_login_form":1,"next":"/admin/"
}, follow=True)

cl_path  = f"/admin/{Equipment._meta.app_label}/{Equipment._meta.model_name}/"
add_path = f"/admin/{Equipment._meta.app_label}/{Equipment._meta.model_name}/add/"

print("CL  status:", c.get(cl_path).status_code, cl_path)
print("ADD status:", c.get(add_path).status_code, add_path)
### DOSYA BİTİŞ: admin_smoke_final.py

### DOSYA BAŞLANGIÇ: .\\_yedek\20251005-193207\_otokodlama\admin_smoke_fixed.py
import os, sys, django
sys.path.insert(0, os.getcwd())
os.environ.setdefault("DJANGO_SETTINGS_MODULE","core.settings_maintenance")
django.setup()

from django.contrib import admin
admin.autodiscover()  # güvenli

from django.contrib.auth import get_user_model
from django.test import Client
from django.urls import reverse, NoReverseMatch
from django.contrib.admin.templatetags.admin_urls import admin_urlname
from maintenance.models import Equipment

# kritik reverse'ler
print("admin:index ->", reverse("admin:index"))
print("admin:login ->", reverse("admin:login"))

# app_list bazı sürümlerde/kurulumlarda isim/ekleme farkı yüzünden reverse edilmeyebilir
try:
    print("admin:app_list(maintenance) ->", reverse("admin:app_list", kwargs={"app_label":"maintenance"}))
except NoReverseMatch as e:
    print("WARN app_list:", e)

# model bazlı reverse (garanti)
nm_cl  = admin_urlname(Equipment._meta, "changelist")
nm_add = admin_urlname(Equipment._meta, "add")
print(nm_cl,  "->", reverse(nm_cl))
print(nm_add, "->", reverse(nm_add))

# superuser garanti
User = get_user_model()
u, _ = User.objects.get_or_create(username="admin",
    defaults={"email":"admin@example.com","is_staff":True,"is_superuser":True})
u.is_staff = True; u.is_superuser = True; u.set_password("admin123!"); u.save()

# login + sayfa durumları
c = Client()
c.post("/admin/login/?next=/admin/", {
    "username":"admin","password":"admin123!",
    "this_is_the_login_form":1,"next":"/admin/"
}, follow=True)

print("CL  status:", c.get("/admin/maintenance/equipment/").status_code)
print("ADD status:", c.get("/admin/maintenance/equipment/add/").status_code)
### DOSYA BİTİŞ: admin_smoke_fixed.py

### DOSYA BAŞLANGIÇ: .\\_yedek\20251005-225814\_otokodlama\admin_smoke_fixed.py
import os, sys, django
sys.path.insert(0, os.getcwd())
os.environ.setdefault("DJANGO_SETTINGS_MODULE","core.settings_maintenance")
django.setup()

from django.contrib import admin
admin.autodiscover()  # güvenli

from django.contrib.auth import get_user_model
from django.test import Client
from django.urls import reverse, NoReverseMatch
from django.contrib.admin.templatetags.admin_urls import admin_urlname
from maintenance.models import Equipment

# kritik reverse'ler
print("admin:index ->", reverse("admin:index"))
print("admin:login ->", reverse("admin:login"))

# app_list bazı sürümlerde/kurulumlarda isim/ekleme farkı yüzünden reverse edilmeyebilir
try:
    print("admin:app_list(maintenance) ->", reverse("admin:app_list", kwargs={"app_label":"maintenance"}))
except NoReverseMatch as e:
    print("WARN app_list:", e)

# model bazlı reverse (garanti)
nm_cl  = admin_urlname(Equipment._meta, "changelist")
nm_add = admin_urlname(Equipment._meta, "add")
print(nm_cl,  "->", reverse(nm_cl))
print(nm_add, "->", reverse(nm_add))

# superuser garanti
User = get_user_model()
u, _ = User.objects.get_or_create(username="admin",
    defaults={"email":"admin@example.com","is_staff":True,"is_superuser":True})
u.is_staff = True; u.is_superuser = True; u.set_password("admin123!"); u.save()

# login + sayfa durumları
c = Client()
c.post("/admin/login/?next=/admin/", {
    "username":"admin","password":"admin123!",
    "this_is_the_login_form":1,"next":"/admin/"
}, follow=True)

print("CL  status:", c.get("/admin/maintenance/equipment/").status_code)
print("ADD status:", c.get("/admin/maintenance/equipment/add/").status_code)
### DOSYA BİTİŞ: admin_smoke_fixed.py

### DOSYA BAŞLANGIÇ: .\\_otokodlama\admin_smoke_fixed.py
import os, sys, django
sys.path.insert(0, os.getcwd())
os.environ.setdefault("DJANGO_SETTINGS_MODULE","core.settings_maintenance")
django.setup()

from django.contrib import admin
admin.autodiscover()  # güvenli

from django.contrib.auth import get_user_model
from django.test import Client
from django.urls import reverse, NoReverseMatch
from django.contrib.admin.templatetags.admin_urls import admin_urlname
from maintenance.models import Equipment

# kritik reverse'ler
print("admin:index ->", reverse("admin:index"))
print("admin:login ->", reverse("admin:login"))

# app_list bazı sürümlerde/kurulumlarda isim/ekleme farkı yüzünden reverse edilmeyebilir
try:
    print("admin:app_list(maintenance) ->", reverse("admin:app_list", kwargs={"app_label":"maintenance"}))
except NoReverseMatch as e:
    print("WARN app_list:", e)

# model bazlı reverse (garanti)
nm_cl  = admin_urlname(Equipment._meta, "changelist")
nm_add = admin_urlname(Equipment._meta, "add")
print(nm_cl,  "->", reverse(nm_cl))
print(nm_add, "->", reverse(nm_add))

# superuser garanti
User = get_user_model()
u, _ = User.objects.get_or_create(username="admin",
    defaults={"email":"admin@example.com","is_staff":True,"is_superuser":True})
u.is_staff = True; u.is_superuser = True; u.set_password("admin123!"); u.save()

# login + sayfa durumları
c = Client()
c.post("/admin/login/?next=/admin/", {
    "username":"admin","password":"admin123!",
    "this_is_the_login_form":1,"next":"/admin/"
}, follow=True)

print("CL  status:", c.get("/admin/maintenance/equipment/").status_code)
print("ADD status:", c.get("/admin/maintenance/equipment/add/").status_code)
### DOSYA BİTİŞ: admin_smoke_fixed.py

### DOSYA BAŞLANGIÇ: .\\_yedek\20251005-193207\_otokodlama\admin_smoke.py
import os, sys, django
sys.path.insert(0, os.getcwd())
os.environ.setdefault("DJANGO_SETTINGS_MODULE","core.settings_maintenance")
django.setup()

from django.contrib import admin
from django.urls import reverse
from django.test import Client
from django.contrib.auth import get_user_model

User = get_user_model()
u, _ = User.objects.get_or_create(username="admin",
    defaults={"email":"admin@example.com","is_staff":True,"is_superuser":True})
u.is_staff = True; u.is_superuser = True; u.set_password("admin123!"); u.save()

print("admin:index ->", reverse("admin:index"))
print("admin:login ->", reverse("admin:login"))
print("app_list(maintenance) ->", reverse("admin:app_list", kwargs={"app_label":"maintenance"}))

c = Client()
c.post("/admin/login/?next=/admin/", {
    "username":"admin","password":"admin123!",
    "this_is_the_login_form":1,"next":"/admin/"
}, follow=True)

print("CL  /admin/maintenance/equipment/     ->", c.get("/admin/maintenance/equipment/").status_code)
print("ADD /admin/maintenance/equipment/add/ ->", c.get("/admin/maintenance/equipment/add/").status_code)
### DOSYA BİTİŞ: admin_smoke.py

### DOSYA BAŞLANGIÇ: .\\_otokodlama\admin_smoke.py
import os, sys, django
sys.path.insert(0, os.getcwd())
os.environ.setdefault("DJANGO_SETTINGS_MODULE","core.settings_maintenance")
django.setup()

from django.contrib import admin
from django.urls import reverse
from django.test import Client
from django.contrib.auth import get_user_model

User = get_user_model()
u, _ = User.objects.get_or_create(username="admin",
    defaults={"email":"admin@example.com","is_staff":True,"is_superuser":True})
u.is_staff = True; u.is_superuser = True; u.set_password("admin123!"); u.save()

print("admin:index ->", reverse("admin:index"))
print("admin:login ->", reverse("admin:login"))
print("app_list(maintenance) ->", reverse("admin:app_list", kwargs={"app_label":"maintenance"}))

c = Client()
c.post("/admin/login/?next=/admin/", {
    "username":"admin","password":"admin123!",
    "this_is_the_login_form":1,"next":"/admin/"
}, follow=True)

print("CL  /admin/maintenance/equipment/     ->", c.get("/admin/maintenance/equipment/").status_code)
print("ADD /admin/maintenance/equipment/add/ ->", c.get("/admin/maintenance/equipment/add/").status_code)
### DOSYA BİTİŞ: admin_smoke.py

### DOSYA BAŞLANGIÇ: .\\_yedek\20251005-225814\_otokodlama\admin_smoke.py
import os, sys, django
sys.path.insert(0, os.getcwd())
os.environ.setdefault("DJANGO_SETTINGS_MODULE","core.settings_maintenance")
django.setup()

from django.contrib import admin
from django.urls import reverse
from django.test import Client
from django.contrib.auth import get_user_model

User = get_user_model()
u, _ = User.objects.get_or_create(username="admin",
    defaults={"email":"admin@example.com","is_staff":True,"is_superuser":True})
u.is_staff = True; u.is_superuser = True; u.set_password("admin123!"); u.save()

print("admin:index ->", reverse("admin:index"))
print("admin:login ->", reverse("admin:login"))
print("app_list(maintenance) ->", reverse("admin:app_list", kwargs={"app_label":"maintenance"}))

c = Client()
c.post("/admin/login/?next=/admin/", {
    "username":"admin","password":"admin123!",
    "this_is_the_login_form":1,"next":"/admin/"
}, follow=True)

print("CL  /admin/maintenance/equipment/     ->", c.get("/admin/maintenance/equipment/").status_code)
print("ADD /admin/maintenance/equipment/add/ ->", c.get("/admin/maintenance/equipment/add/").status_code)
### DOSYA BİTİŞ: admin_smoke.py

### DOSYA BAŞLANGIÇ: .\\_otokodlama\list_admin_urls.py
import os, sys, django
sys.path.insert(0, os.getcwd())
os.environ.setdefault("DJANGO_SETTINGS_MODULE","core.settings_maintenance")
django.setup()

from django.contrib import admin
from django.urls import reverse, NoReverseMatch

print("site.name:", getattr(admin.site, "name", None))

# kritik üç reverse:
for name, kwargs in [
    ("admin:index", None),
    ("admin:login", None),
    ("admin:app_list", {"app_label":"maintenance"}),
]:
    try:
        print(name, "->", reverse(name, kwargs=kwargs))
    except NoReverseMatch as e:
        print(name, "-> NoReverseMatch:", e)

# model bazlı reverse'lar
from maintenance.models import Equipment
from django.contrib.admin.templatetags.admin_urls import admin_urlname
nm_cl = admin_urlname(Equipment._meta, "changelist")
nm_add = admin_urlname(Equipment._meta, "add")
for nm in [nm_cl, nm_add]:
    try:
        print(nm, "->", reverse(nm))
    except NoReverseMatch as e:
        print(nm, "-> NoReverseMatch:", e)
### DOSYA BİTİŞ: list_admin_urls.py

### DOSYA BAŞLANGIÇ: .\\_yedek\20251005-193207\_otokodlama\list_admin_urls.py
import os, sys, django
sys.path.insert(0, os.getcwd())
os.environ.setdefault("DJANGO_SETTINGS_MODULE","core.settings_maintenance")
django.setup()

from django.contrib import admin
from django.urls import reverse, NoReverseMatch

print("site.name:", getattr(admin.site, "name", None))

# kritik üç reverse:
for name, kwargs in [
    ("admin:index", None),
    ("admin:login", None),
    ("admin:app_list", {"app_label":"maintenance"}),
]:
    try:
        print(name, "->", reverse(name, kwargs=kwargs))
    except NoReverseMatch as e:
        print(name, "-> NoReverseMatch:", e)

# model bazlı reverse'lar
from maintenance.models import Equipment
from django.contrib.admin.templatetags.admin_urls import admin_urlname
nm_cl = admin_urlname(Equipment._meta, "changelist")
nm_add = admin_urlname(Equipment._meta, "add")
for nm in [nm_cl, nm_add]:
    try:
        print(nm, "->", reverse(nm))
    except NoReverseMatch as e:
        print(nm, "-> NoReverseMatch:", e)
### DOSYA BİTİŞ: list_admin_urls.py

### DOSYA BAŞLANGIÇ: .\\_yedek\20251005-225814\_otokodlama\list_admin_urls.py
import os, sys, django
sys.path.insert(0, os.getcwd())
os.environ.setdefault("DJANGO_SETTINGS_MODULE","core.settings_maintenance")
django.setup()

from django.contrib import admin
from django.urls import reverse, NoReverseMatch

print("site.name:", getattr(admin.site, "name", None))

# kritik üç reverse:
for name, kwargs in [
    ("admin:index", None),
    ("admin:login", None),
    ("admin:app_list", {"app_label":"maintenance"}),
]:
    try:
        print(name, "->", reverse(name, kwargs=kwargs))
    except NoReverseMatch as e:
        print(name, "-> NoReverseMatch:", e)

# model bazlı reverse'lar
from maintenance.models import Equipment
from django.contrib.admin.templatetags.admin_urls import admin_urlname
nm_cl = admin_urlname(Equipment._meta, "changelist")
nm_add = admin_urlname(Equipment._meta, "add")
for nm in [nm_cl, nm_add]:
    try:
        print(nm, "->", reverse(nm))
    except NoReverseMatch as e:
        print(nm, "-> NoReverseMatch:", e)
### DOSYA BİTİŞ: list_admin_urls.py

### DOSYA BAŞLANGIÇ: .\\_yedek\20251005-225814\_otokodlama\admin_namespace_probe.py
import os, sys, django
sys.path.insert(0, os.getcwd())
os.environ.setdefault("DJANGO_SETTINGS_MODULE","core.settings_maintenance")
django.setup()

from django.contrib import admin
from django.urls import reverse
from maintenance.models import Equipment
from django.contrib.admin.templatetags.admin_urls import admin_urlname

print("site.name =", getattr(admin.site, "name", None))
print("admin:index  ->", reverse("admin:index"))
print("admin:login  ->", reverse("admin:login"))
print("admin:app_list(maintenance) ->", reverse("admin:app_list", kwargs={"app_label":"maintenance"}))

nm_cl = admin_urlname(Equipment._meta, "changelist")
nm_add = admin_urlname(Equipment._meta, "add")
print("nm_cl =", nm_cl)
print("nm_add =", nm_add)
print("reverse(changelist) ->", reverse(nm_cl))
print("reverse(add)        ->", reverse(nm_add))
### DOSYA BİTİŞ: admin_namespace_probe.py

### DOSYA BAŞLANGIÇ: .\\_otokodlama\admin_namespace_probe.py
import os, sys, django
sys.path.insert(0, os.getcwd())
os.environ.setdefault("DJANGO_SETTINGS_MODULE","core.settings_maintenance")
django.setup()

from django.contrib import admin
from django.urls import reverse
from maintenance.models import Equipment
from django.contrib.admin.templatetags.admin_urls import admin_urlname

print("site.name =", getattr(admin.site, "name", None))
print("admin:index  ->", reverse("admin:index"))
print("admin:login  ->", reverse("admin:login"))
print("admin:app_list(maintenance) ->", reverse("admin:app_list", kwargs={"app_label":"maintenance"}))

nm_cl = admin_urlname(Equipment._meta, "changelist")
nm_add = admin_urlname(Equipment._meta, "add")
print("nm_cl =", nm_cl)
print("nm_add =", nm_add)
print("reverse(changelist) ->", reverse(nm_cl))
print("reverse(add)        ->", reverse(nm_add))
### DOSYA BİTİŞ: admin_namespace_probe.py

### DOSYA BAŞLANGIÇ: .\\_yedek\20251005-193207\_otokodlama\admin_namespace_probe.py
import os, sys, django
sys.path.insert(0, os.getcwd())
os.environ.setdefault("DJANGO_SETTINGS_MODULE","core.settings_maintenance")
django.setup()

from django.contrib import admin
from django.urls import reverse
from maintenance.models import Equipment
from django.contrib.admin.templatetags.admin_urls import admin_urlname

print("site.name =", getattr(admin.site, "name", None))
print("admin:index  ->", reverse("admin:index"))
print("admin:login  ->", reverse("admin:login"))
print("admin:app_list(maintenance) ->", reverse("admin:app_list", kwargs={"app_label":"maintenance"}))

nm_cl = admin_urlname(Equipment._meta, "changelist")
nm_add = admin_urlname(Equipment._meta, "add")
print("nm_cl =", nm_cl)
print("nm_add =", nm_add)
print("reverse(changelist) ->", reverse(nm_cl))
print("reverse(add)        ->", reverse(nm_add))
### DOSYA BİTİŞ: admin_namespace_probe.py

### DOSYA BAŞLANGIÇ: .\\_yedek\20251005-225814\_otokodlama\admin_auth_probe_ok.py
import os, sys, django
sys.path.insert(0, os.getcwd())
os.environ.setdefault("DJANGO_SETTINGS_MODULE","core.settings_maintenance")
django.setup()

from django.test import Client
c = Client()
r = c.get("/admin/"); print("GET /admin/ ->", r.status_code)  # 302 beklenir

resp = c.post("/admin/login/?next=/admin/", {
    "username":"admin","password":"admin123!",
    "this_is_the_login_form":1,"next":"/admin/"
}, follow=True)
print("login final status:", resp.status_code)

r1 = c.get("/admin/maintenance/equipment/"); print("CL status:", r1.status_code)  # 200
r2 = c.get("/admin/maintenance/equipment/add/"); print("ADD status:", r2.status_code)  # 200
### DOSYA BİTİŞ: admin_auth_probe_ok.py

### DOSYA BAŞLANGIÇ: .\\_yedek\20251005-193207\_otokodlama\admin_auth_probe_ok.py
import os, sys, django
sys.path.insert(0, os.getcwd())
os.environ.setdefault("DJANGO_SETTINGS_MODULE","core.settings_maintenance")
django.setup()

from django.test import Client
c = Client()
r = c.get("/admin/"); print("GET /admin/ ->", r.status_code)  # 302 beklenir

resp = c.post("/admin/login/?next=/admin/", {
    "username":"admin","password":"admin123!",
    "this_is_the_login_form":1,"next":"/admin/"
}, follow=True)
print("login final status:", resp.status_code)

r1 = c.get("/admin/maintenance/equipment/"); print("CL status:", r1.status_code)  # 200
r2 = c.get("/admin/maintenance/equipment/add/"); print("ADD status:", r2.status_code)  # 200
### DOSYA BİTİŞ: admin_auth_probe_ok.py

### DOSYA BAŞLANGIÇ: .\\_otokodlama\admin_auth_probe_ok.py
import os, sys, django
sys.path.insert(0, os.getcwd())
os.environ.setdefault("DJANGO_SETTINGS_MODULE","core.settings_maintenance")
django.setup()

from django.test import Client
c = Client()
r = c.get("/admin/"); print("GET /admin/ ->", r.status_code)  # 302 beklenir

resp = c.post("/admin/login/?next=/admin/", {
    "username":"admin","password":"admin123!",
    "this_is_the_login_form":1,"next":"/admin/"
}, follow=True)
print("login final status:", resp.status_code)

r1 = c.get("/admin/maintenance/equipment/"); print("CL status:", r1.status_code)  # 200
r2 = c.get("/admin/maintenance/equipment/add/"); print("ADD status:", r2.status_code)  # 200
### DOSYA BİTİŞ: admin_auth_probe_ok.py

### DOSYA BAŞLANGIÇ: .\\_otokodlama\dump_admin_names.py
import os, sys, django
from itertools import islice
sys.path.insert(0, os.getcwd())
os.environ.setdefault("DJANGO_SETTINGS_MODULE","core.settings_maintenance")
django.setup()

from django.urls import get_resolver
from django.contrib import admin
from maintenance.models import Equipment

res = get_resolver()
names = []
for k in res.reverse_dict.keys():
    if isinstance(k, str) and ("admin" in k or "maintenance" in k):
        names.append(k)

print("~ İlk 50 isim ~")
for n in islice(sorted(set(names)), 50):
    print(n)

# Ayrıca model bazlı isimleri üret ve tersine çevir
from django.contrib.admin.templatetags.admin_urls import admin_urlname
nm_cl = admin_urlname(Equipment._meta, "changelist")
nm_add = admin_urlname(Equipment._meta, "add")
print("nm_cl:", nm_cl)
print("nm_add:", nm_add)

from django.urls import reverse
print("reverse(cl):", reverse(nm_cl))
print("reverse(add):", reverse(nm_add))
### DOSYA BİTİŞ: dump_admin_names.py

### DOSYA BAŞLANGIÇ: .\\_yedek\20251005-193207\_otokodlama\dump_admin_names.py
import os, sys, django
from itertools import islice
sys.path.insert(0, os.getcwd())
os.environ.setdefault("DJANGO_SETTINGS_MODULE","core.settings_maintenance")
django.setup()

from django.urls import get_resolver
from django.contrib import admin
from maintenance.models import Equipment

res = get_resolver()
names = []
for k in res.reverse_dict.keys():
    if isinstance(k, str) and ("admin" in k or "maintenance" in k):
        names.append(k)

print("~ İlk 50 isim ~")
for n in islice(sorted(set(names)), 50):
    print(n)

# Ayrıca model bazlı isimleri üret ve tersine çevir
from django.contrib.admin.templatetags.admin_urls import admin_urlname
nm_cl = admin_urlname(Equipment._meta, "changelist")
nm_add = admin_urlname(Equipment._meta, "add")
print("nm_cl:", nm_cl)
print("nm_add:", nm_add)

from django.urls import reverse
print("reverse(cl):", reverse(nm_cl))
print("reverse(add):", reverse(nm_add))
### DOSYA BİTİŞ: dump_admin_names.py

### DOSYA BAŞLANGIÇ: .\\_yedek\20251005-225814\_otokodlama\dump_admin_names.py
import os, sys, django
from itertools import islice
sys.path.insert(0, os.getcwd())
os.environ.setdefault("DJANGO_SETTINGS_MODULE","core.settings_maintenance")
django.setup()

from django.urls import get_resolver
from django.contrib import admin
from maintenance.models import Equipment

res = get_resolver()
names = []
for k in res.reverse_dict.keys():
    if isinstance(k, str) and ("admin" in k or "maintenance" in k):
        names.append(k)

print("~ İlk 50 isim ~")
for n in islice(sorted(set(names)), 50):
    print(n)

# Ayrıca model bazlı isimleri üret ve tersine çevir
from django.contrib.admin.templatetags.admin_urls import admin_urlname
nm_cl = admin_urlname(Equipment._meta, "changelist")
nm_add = admin_urlname(Equipment._meta, "add")
print("nm_cl:", nm_cl)
print("nm_add:", nm_add)

from django.urls import reverse
print("reverse(cl):", reverse(nm_cl))
print("reverse(add):", reverse(nm_add))
### DOSYA BİTİŞ: dump_admin_names.py

### DOSYA BAŞLANGIÇ: .\\_yedek\20251005-225814\_otokodlama\check_admin_tuple.py
import os, sys, django
sys.path.insert(0, os.getcwd())
os.environ.setdefault("DJANGO_SETTINGS_MODULE","core.settings_maintenance")
django.setup()

from django.contrib import admin
tpl = admin.site.urls  # (urlpatterns, app_name, namespace)
print("app_name:", tpl[1], "| namespace:", tpl[2])
### DOSYA BİTİŞ: check_admin_tuple.py

### DOSYA BAŞLANGIÇ: .\\_otokodlama\check_admin_tuple.py
import os, sys, django
sys.path.insert(0, os.getcwd())
os.environ.setdefault("DJANGO_SETTINGS_MODULE","core.settings_maintenance")
django.setup()

from django.contrib import admin
tpl = admin.site.urls  # (urlpatterns, app_name, namespace)
print("app_name:", tpl[1], "| namespace:", tpl[2])
### DOSYA BİTİŞ: check_admin_tuple.py

### DOSYA BAŞLANGIÇ: .\\_yedek\20251005-193207\_otokodlama\check_admin_tuple.py
import os, sys, django
sys.path.insert(0, os.getcwd())
os.environ.setdefault("DJANGO_SETTINGS_MODULE","core.settings_maintenance")
django.setup()

from django.contrib import admin
tpl = admin.site.urls  # (urlpatterns, app_name, namespace)
print("app_name:", tpl[1], "| namespace:", tpl[2])
### DOSYA BİTİŞ: check_admin_tuple.py

### DOSYA BAŞLANGIÇ: .\\_yedek\20251005-225814\_otokodlama\admin_auth_probe_after_reset.py
import os, sys, django
sys.path.insert(0, os.getcwd())
os.environ.setdefault("DJANGO_SETTINGS_MODULE","core.settings_maintenance")
django.setup()

from django.test import Client
c = Client()

# login sayfasına yönlendirme beklenen (302)
r = c.get("/admin/")
print("GET /admin/ ->", r.status_code)

# giriş yap
resp = c.post("/admin/login/?next=/admin/", {
    "username":"admin", "password":"admin123!",
    "this_is_the_login_form":1, "next":"/admin/"
}, follow=True)
print("login final status:", resp.status_code)

# model sayfaları artık 200 olmalı
r1 = c.get("/admin/maintenance/equipment/")
r2 = c.get("/admin/maintenance/equipment/add/")
print("CL status:", r1.status_code)
print("ADD status:", r2.status_code)
### DOSYA BİTİŞ: admin_auth_probe_after_reset.py

### DOSYA BAŞLANGIÇ: .\\_yedek\20251005-193207\_otokodlama\admin_auth_probe_after_reset.py
import os, sys, django
sys.path.insert(0, os.getcwd())
os.environ.setdefault("DJANGO_SETTINGS_MODULE","core.settings_maintenance")
django.setup()

from django.test import Client
c = Client()

# login sayfasına yönlendirme beklenen (302)
r = c.get("/admin/")
print("GET /admin/ ->", r.status_code)

# giriş yap
resp = c.post("/admin/login/?next=/admin/", {
    "username":"admin", "password":"admin123!",
    "this_is_the_login_form":1, "next":"/admin/"
}, follow=True)
print("login final status:", resp.status_code)

# model sayfaları artık 200 olmalı
r1 = c.get("/admin/maintenance/equipment/")
r2 = c.get("/admin/maintenance/equipment/add/")
print("CL status:", r1.status_code)
print("ADD status:", r2.status_code)
### DOSYA BİTİŞ: admin_auth_probe_after_reset.py

### DOSYA BAŞLANGIÇ: .\\_otokodlama\admin_auth_probe_after_reset.py
import os, sys, django
sys.path.insert(0, os.getcwd())
os.environ.setdefault("DJANGO_SETTINGS_MODULE","core.settings_maintenance")
django.setup()

from django.test import Client
c = Client()

# login sayfasına yönlendirme beklenen (302)
r = c.get("/admin/")
print("GET /admin/ ->", r.status_code)

# giriş yap
resp = c.post("/admin/login/?next=/admin/", {
    "username":"admin", "password":"admin123!",
    "this_is_the_login_form":1, "next":"/admin/"
}, follow=True)
print("login final status:", resp.status_code)

# model sayfaları artık 200 olmalı
r1 = c.get("/admin/maintenance/equipment/")
r2 = c.get("/admin/maintenance/equipment/add/")
print("CL status:", r1.status_code)
print("ADD status:", r2.status_code)
### DOSYA BİTİŞ: admin_auth_probe_after_reset.py

### DOSYA BAŞLANGIÇ: .\\_yedek\20251005-225814\_otokodlama\admin_reverse_check_fixed.py
import os, sys, django
sys.path.insert(0, os.getcwd())
os.environ.setdefault("DJANGO_SETTINGS_MODULE","core.settings_maintenance")
django.setup()

from django.contrib import admin
from django.urls import reverse, NoReverseMatch
from django.contrib.admin.templatetags.admin_urls import admin_urlname
from maintenance.models import Equipment

print("Registered in default admin site:", Equipment in admin.site._registry)

name_changelist = admin_urlname(Equipment._meta, "changelist")   # Örn: "admin:maintenance_equipment_changelist"
name_add        = admin_urlname(Equipment._meta, "add")          # Örn: "admin:maintenance_equipment_add"
print("Names ->", name_changelist, ",", name_add)

try:
    # DİKKAT: Burada ekstra "admin:" EKLEMİYORUZ
    print("Reverse CL :", reverse(name_changelist))
    print("Reverse ADD:", reverse(name_add))
except NoReverseMatch as e:
    print("NoReverseMatch:", e)
### DOSYA BİTİŞ: admin_reverse_check_fixed.py

### DOSYA BAŞLANGIÇ: .\\_otokodlama\admin_reverse_check_fixed.py
import os, sys, django
sys.path.insert(0, os.getcwd())
os.environ.setdefault("DJANGO_SETTINGS_MODULE","core.settings_maintenance")
django.setup()

from django.contrib import admin
from django.urls import reverse, NoReverseMatch
from django.contrib.admin.templatetags.admin_urls import admin_urlname
from maintenance.models import Equipment

print("Registered in default admin site:", Equipment in admin.site._registry)

name_changelist = admin_urlname(Equipment._meta, "changelist")   # Örn: "admin:maintenance_equipment_changelist"
name_add        = admin_urlname(Equipment._meta, "add")          # Örn: "admin:maintenance_equipment_add"
print("Names ->", name_changelist, ",", name_add)

try:
    # DİKKAT: Burada ekstra "admin:" EKLEMİYORUZ
    print("Reverse CL :", reverse(name_changelist))
    print("Reverse ADD:", reverse(name_add))
except NoReverseMatch as e:
    print("NoReverseMatch:", e)
### DOSYA BİTİŞ: admin_reverse_check_fixed.py

### DOSYA BAŞLANGIÇ: .\\_yedek\20251005-193207\_otokodlama\admin_reverse_check_fixed.py
import os, sys, django
sys.path.insert(0, os.getcwd())
os.environ.setdefault("DJANGO_SETTINGS_MODULE","core.settings_maintenance")
django.setup()

from django.contrib import admin
from django.urls import reverse, NoReverseMatch
from django.contrib.admin.templatetags.admin_urls import admin_urlname
from maintenance.models import Equipment

print("Registered in default admin site:", Equipment in admin.site._registry)

name_changelist = admin_urlname(Equipment._meta, "changelist")   # Örn: "admin:maintenance_equipment_changelist"
name_add        = admin_urlname(Equipment._meta, "add")          # Örn: "admin:maintenance_equipment_add"
print("Names ->", name_changelist, ",", name_add)

try:
    # DİKKAT: Burada ekstra "admin:" EKLEMİYORUZ
    print("Reverse CL :", reverse(name_changelist))
    print("Reverse ADD:", reverse(name_add))
except NoReverseMatch as e:
    print("NoReverseMatch:", e)
### DOSYA BİTİŞ: admin_reverse_check_fixed.py

### DOSYA BAŞLANGIÇ: .\\_otokodlama\probe_admin_500.py
import os, sys, django
sys.path.insert(0, os.getcwd())
os.environ.setdefault("DJANGO_SETTINGS_MODULE","core.settings_maintenance")
django.setup()
from django.test import Client
c = Client()
r = c.get("/admin/")
print("status:", r.status_code)
print((r.content[:800]).decode("utf-8","ignore"))
### DOSYA BİTİŞ: probe_admin_500.py

### DOSYA BAŞLANGIÇ: .\\_yedek\20251005-193207\_otokodlama\probe_admin_500.py
import os, sys, django
sys.path.insert(0, os.getcwd())
os.environ.setdefault("DJANGO_SETTINGS_MODULE","core.settings_maintenance")
django.setup()
from django.test import Client
c = Client()
r = c.get("/admin/")
print("status:", r.status_code)
print((r.content[:800]).decode("utf-8","ignore"))
### DOSYA BİTİŞ: probe_admin_500.py

### DOSYA BAŞLANGIÇ: .\\_yedek\20251005-225814\_otokodlama\probe_admin_500.py
import os, sys, django
sys.path.insert(0, os.getcwd())
os.environ.setdefault("DJANGO_SETTINGS_MODULE","core.settings_maintenance")
django.setup()
from django.test import Client
c = Client()
r = c.get("/admin/")
print("status:", r.status_code)
print((r.content[:800]).decode("utf-8","ignore"))
### DOSYA BİTİŞ: probe_admin_500.py

### DOSYA BAŞLANGIÇ: .\\_yedek\20251005-225814\_otokodlama\admin_auth_probe.py
import os, sys, django
sys.path.insert(0, os.getcwd())
os.environ.setdefault("DJANGO_SETTINGS_MODULE","core.settings_maintenance")
django.setup()

from django.test import Client

c = Client()

# 1) login sayfasına yönlendirme var mı?
r = c.get("/admin/")
print("GET /admin/ ->", r.status_code)  # 302 beklenir (login'e)

# 2) admin kullanıcısı ile giriş
resp = c.post("/admin/login/?next=/admin/", {
    "username":"admin", "password":"admin123!",
    "this_is_the_login_form":1, "next":"/admin/"
}, follow=True)
print("login final status:", resp.status_code)

# 3) artık changelist/add kaç dönüyor?
r1 = c.get("/admin/maintenance/equipment/")
r2 = c.get("/admin/maintenance/equipment/add/")
print("CL status:", r1.status_code)   # 200 beklenir
print("ADD status:", r2.status_code)  # 200 beklenir
### DOSYA BİTİŞ: admin_auth_probe.py

### DOSYA BAŞLANGIÇ: .\\_yedek\20251005-193207\_otokodlama\admin_auth_probe.py
import os, sys, django
sys.path.insert(0, os.getcwd())
os.environ.setdefault("DJANGO_SETTINGS_MODULE","core.settings_maintenance")
django.setup()

from django.test import Client

c = Client()

# 1) login sayfasına yönlendirme var mı?
r = c.get("/admin/")
print("GET /admin/ ->", r.status_code)  # 302 beklenir (login'e)

# 2) admin kullanıcısı ile giriş
resp = c.post("/admin/login/?next=/admin/", {
    "username":"admin", "password":"admin123!",
    "this_is_the_login_form":1, "next":"/admin/"
}, follow=True)
print("login final status:", resp.status_code)

# 3) artık changelist/add kaç dönüyor?
r1 = c.get("/admin/maintenance/equipment/")
r2 = c.get("/admin/maintenance/equipment/add/")
print("CL status:", r1.status_code)   # 200 beklenir
print("ADD status:", r2.status_code)  # 200 beklenir
### DOSYA BİTİŞ: admin_auth_probe.py

