name: E2E â€“ Django + Playwright
on:
  push: { branches: [ "ci/e2e", "main" ] }
  pull_request: {}
permissions: { contents: read }
jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    env:
      CI: "true"
      BASE_URL: "http://127.0.0.1:8010"
      DJANGO_SETTINGS_MODULE: "core.settings"
      PYTHONUNBUFFERED: "1"
      E2E_USER: ${{ secrets.E2E_USER }}
      E2E_PASS: ${{ secrets.E2E_PASS }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }
      - uses: actions/setup-node@v4
        with: { node-version: "20" }
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Install Node deps & Chromium
        run: |
          if [ -f package.json ]; then npm ci; else npm init -y && npm i -D @playwright/test; fi
          npx playwright install --with-deps chromium
      - name: Django migrate & create superuser
        run: |
          python manage.py migrate --noinput
          python manage.py shell <<'PY'
          from django.contrib.auth import get_user_model
          U=get_user_model()
          u,created=U.objects.get_or_create(
            username="${{ env.E2E_USER }}",
            defaults={"is_superuser":True,"is_staff":True,"email":"e2e@example.com"}
          )
          if created: u.set_password("${{ env.E2E_PASS }}"); u.save()
          PY
      - name: Start server & wait
        run: |
          python manage.py runserver 0.0.0.0:8010 > runserver.log 2>&1 &
          python - <<'PY'
          import socket,time,sys
          for _ in range(90):
            try: socket.create_connection(("127.0.0.1",8010),1).close(); sys.exit(0)
            except OSError: time.sleep(1)
          sys.exit("server did not start")
          PY
      - name: Run Playwright
        run: npx playwright test --project=chromium --reporter=html
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-ubuntu-artifacts
          path: |
            playwright-report
            test-results
            runserver.log