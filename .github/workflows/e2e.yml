name: e2e
on:
  workflow_call: {}
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]
  workflow_dispatch: {}

jobs:
  test:
    runs-on: windows-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Python & Node deps
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          if (Test-Path "requirements.txt") { pip install -r requirements.txt }
          if (Test-Path "package-lock.json") { npm ci } elseif (Test-Path "package.json") { npm i }

      - name: Django migrate + seed admin
        shell: pwsh
        env:
          DJANGO_SETTINGS_MODULE: "core.settings_maintenance"
        run: |
          if (Test-Path "manage.py") {
            python manage.py migrate --settings=core.settings_maintenance
            $u = "${env:ADMIN_USER}"; if (-not $u) { $u="admin" }
            $p = "${env:ADMIN_PASS}"; if (-not $p) { $p="Admin!2345" }
            python manage.py shell --settings=core.settings_maintenance -c "from django.contrib.auth import get_user_model as G; U=G(); u,created=U.objects.get_or_create(username='$u', defaults={'email':'admin@example.com','is_staff':True,'is_superuser':True}); u.is_staff=True; u.is_superuser=True; u.set_password('$p'); u.save(); print('created' if created else 'updated')"
          }

      - name: Start Django server (bg)
        shell: pwsh
        env:
          DJANGO_SETTINGS_MODULE: "core.settings_maintenance"
        run: |
          if (Test-Path "manage.py") {
            Start-Process -FilePath python -ArgumentList "manage.py","runserver","127.0.0.1:8010" -WindowStyle Hidden
            $deadline = [DateTime]::UtcNow.AddSeconds(60)
            while ([DateTime]::UtcNow -lt $deadline) {
              try {
                $client = New-Object Net.Sockets.TcpClient
                $iar = $client.BeginConnect("127.0.0.1",8010,$null,$null)
                $ok  = $iar.AsyncWaitHandle.WaitOne(1000)
                if ($ok -and $client.Connected) { $client.Close(); break }
                $client.Close()
              } catch {}
              Start-Sleep -Milliseconds 500
            }
          }

      - name: Build tasks (back-compat)
        shell: pwsh
        run: |
          if (Test-Path "tools/build_tasks.ps1") {
            powershell -File tools/build_tasks.ps1
          } elseif (Test-Path "scripts/build-tasks.js") {
            npx node scripts/build-tasks.js
          } elseif (Test-Path "tools/tasks_from_csv.ps1") {
            powershell -File tools/tasks_from_csv.ps1 -Csv "tasks_template.csv" -OutJson "plan/tasks.json"
          }

      - name: Run E2E (quarantine-aware)
        shell: pwsh
        env:
          BASE_URL: "http://127.0.0.1:8010"
        run: |
          if (Test-Path "tools/run_playwright.ps1") {
            powershell -File tools/run_playwright.ps1 -BaseUrl "http://127.0.0.1:8010"
          } else {
            npx playwright test --reporter line,html
          }

      - name: Save Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: |
            playwright-report