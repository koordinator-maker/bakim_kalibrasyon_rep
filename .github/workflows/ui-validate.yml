name: UI Validate (DOM)

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  ui-validate:
    runs-on: windows-latest

    env:
      BASE_URL: ${{ secrets.UI_BASE_URL }}   # ör: http://127.0.0.1:8010 veya staging URL
    steps:
      - name: Django migrate + seed admin
        shell: pwsh
        env:
          DJANGO_SETTINGS_MODULE: "core.settings_maintenance"
        run: |
          if (Test-Path "manage.py") {
            python -m pip install --upgrade pip
            if (Test-Path "requirements.txt") { pip install -r requirements.txt }
            python manage.py migrate --settings=core.settings_maintenance
            $u = "${env:ADMIN_USER}"; if (-not $u) { $u="admin" }
            $p = "${env:ADMIN_PASS}"; if (-not $p) { $p="Admin!2345" }
            python manage.py shell --settings=core.settings_maintenance -c "from django.contrib.auth import get_user_model as G; U=G(); u,created=U.objects.get_or_create(username='$u', defaults={'email':'admin@example.com','is_staff':True,'is_superuser':True}); u.is_staff=True; u.is_superuser=True; u.set_password('$p'); u.save(); print('created' if created else 'updated')"
          }      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install playwright pillow pytesseract
          python -m playwright install --with-deps chromium

      # Eğer Tesseract kullanmayacaksınız, bu adımı atlayabilirsiniz.
      # - name: Install Tesseract (Windows)
      #   run: choco install tesseract --yes

      - name: Run UI validations (CSV)
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"
          # BASE_URL’i ortamdan al (env.BASE_URL) → bizim script zaten alıyor.
          # Temizlik
          Remove-Item _otokodlama\out\*.json -ErrorAction SilentlyContinue -Force
          # Koş
          powershell -ExecutionPolicy Bypass -File ops\run_ui_validate_csv.ps1 `
            -BaseUrl "${env:BASE_URL}" `
            -BaselineDir "targets\reference" `
            -AlertsDir "_otokodlama\alerts"

      - name: Upload JSON results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ui-json
          path: _otokodlama/out/*.json

      - name: Upload alerts (screenshots & logs)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ui-alerts
          path: _otokodlama/alerts/**
