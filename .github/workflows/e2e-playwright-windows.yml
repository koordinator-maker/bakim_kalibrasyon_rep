name: E2E â€“ Django + Playwright (Windows)
on:
  push: { branches: [ "ci/e2e", "main" ] }
  pull_request: {}
permissions: { contents: read }
jobs:
  e2e-win:
    runs-on: windows-latest
    timeout-minutes: 25
    env:
      CI: "true"
      BASE_URL: "http://127.0.0.1:8010"
      DJANGO_SETTINGS_MODULE: "core.settings"
      PYTHONUNBUFFERED: "1"
      E2E_USER: ${{ secrets.E2E_USER }}
      E2E_PASS: ${{ secrets.E2E_PASS }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }
      - uses: actions/setup-node@v4
        with: { node-version: "20" }
      - name: Install Python deps
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          if (Test-Path requirements.txt) { pip install -r requirements.txt }
      - name: Install Node deps & Chromium
        shell: pwsh
        run: |
          if (Test-Path package.json) { npm ci } else { npm init -y; npm i -D @playwright/test }
          npx playwright install chromium
      - name: Django migrate & create superuser
        shell: pwsh
        run: |
          python manage.py migrate --noinput
          python - <<'PY'
          from django.contrib.auth import get_user_model
          U=get_user_model()
          u,created=U.objects.get_or_create(
            username="${{ env.E2E_USER }}",
            defaults={"is_superuser":True,"is_staff":True,"email":"e2e@example.com"}
          )
          if created: u.set_password("${{ env.E2E_PASS }}"); u.save()
          PY
      - name: Start server & wait
        shell: pwsh
        run: |
          Start-Process -FilePath python -ArgumentList 'manage.py','runserver','0.0.0.0:8010' -NoNewWindow
          $ok=$false; 1..90 | % {
            try { $c=New-Object Net.Sockets.TcpClient; $c.Connect('127.0.0.1',8010); $c.Close(); $ok=$true; break } catch { Start-Sleep 1 }
          }
          if (-not $ok) { throw "server did not start" }
      - name: Run Playwright
        shell: pwsh
        run: npx playwright test --project=chromium --reporter=html
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-windows-artifacts
          path: |
            playwright-report
            test-results