name: E2E Dispatch
on:
  workflow_dispatch:
    inputs:
      target:
        description: "both | eqp002 | eqp003 | admin"
        required: true
        default: "both"

jobs:
  e2e:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }

      - name: Install deps
        shell: pwsh
        run: |
          python -m pip install -r requirements.txt
          npm ci
          npx playwright install --with-deps

      # (İsteğe bağlı sağlamlık: build-tasks.js yoksa dummy üret)
      - name: Ensure tests/tasks.json exists (fallback)
        shell: pwsh
        run: |
          if (!(Test-Path .\tests)) { New-Item -ItemType Directory -Force -Path .\tests | Out-Null }
          if (Test-Path .\scripts\build-tasks.js -and (Test-Path .\data\tasks_template.csv -or Test-Path .\tests\tasks_template.csv)) {
            $csv = (Test-Path .\data\tasks_template.csv) ? '.\data\tasks_template.csv' : '.\tests\tasks_template.csv'
            node .\scripts\build-tasks.js $csv .\tests\tasks.json 2>$null
          }
          if (!(Test-Path .\tests\tasks.json)) {
            '[{"id":"CI-DUMMY","type":"check","title":"dummy"}]' | Set-Content -Encoding UTF8 .\tests\tasks.json
          }

      - name: Start Django (bg)
        shell: pwsh
        run: |
          $env:BASE_URL="http://127.0.0.1:8010"
          $env:ADMIN_USER="admin"
          $env:ADMIN_PASS="admin"
          python manage.py migrate
          Start-Process -FilePath python -ArgumentList "manage.py","runserver","0.0.0.0:8010" -WindowStyle Hidden
          Start-Sleep -Seconds 5

      - name: Run tests (explicit file paths; ignore tasks.spec.js)
        shell: pwsh
        run: |
          Set-StrictMode -Version Latest
          $ErrorActionPreference='Stop'
          $t = "${{ github.event.inputs.target }}"
          switch ($t) {
            'eqp002' { $want = @('EQP-002.spec.js') }
            'eqp003' { $want = @('EQP-003.spec.js') }
            'admin'  { $want = @('admin-dashboard.spec.js') }
            default  { $want = @('admin-dashboard.spec.js','EQP-002.spec.js','EQP-003.spec.js') }
          }
          $files = foreach($w in $want){ Get-ChildItem -Recurse -File -Include $w | Select-Object -Expand FullName }
          if (!$files -or $files.Count -eq 0) { throw "Spec dosyası bulunamadı: $($want -join ', ')" }
          Write-Host "Specs:"; $files | % { " - $_" | Write-Host }
          & npx playwright test @files --project=chromium --reporter "line,html" --test-ignore "tasks\.spec\.js"

      - name: Upload playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
